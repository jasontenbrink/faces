app.controller('DirectoryController',['$scope', 'DataService', 'uiGridConstants','$timeout',
function ($scope, DataService, uiGridConstants, $timeout) {
console.log('hi from DirectoryController');
  var dataService = DataService;

  $scope.sendSelectedMemberInfo = function(id) {
    console.log('this is the grid id', id);
    dataService.assignActiveMemberId(id);
  };

  $scope.gridOptions = {
    columnDefs: [
           { field: 'first_name',
             cellTemplate: '<a ng-click="grid.appScope.sendSelectedMemberInfo(row.entity.pin)" ' +
             'href="#/individualDatacard">{{COL_FIELD}}</a>',
             sort: {
               direction: uiGridConstants.ASC,
               priority: 1
             }
           },
           { field: 'last_name',
              sort: {direction: uiGridConstants.ASC, priority: 2}},
           { field: 'email'},
           { field: 'phone'},
           {field: 'pin', visible: false}
         ],
    enableFullRowSelection: true,
    onRegisterApi: function(gridApi){
      $scope.gridApi = gridApi;
    }
  };

  $scope.export = function () {
    console.log('csv export button was hit');
    $scope.gridApi.exporter.csvExport( 'visible', 'visible');
  };


    $timeout(function () {
       angular.element(document).find('nav').triggerHandler('click');
    }, 0);
}]);

/*
to do: autoselect folks in the directory that are already in the family
deselect from directory if someone is removed from family using righthand pane
*/

app.controller('EditFamilyController', ['$scope', 'DataService', 'uiGridConstants', '$timeout', '$http',
function ($scope, DataService, uiGridConstants, $timeout, $http) {
  $scope.searchObject = new SearchObject();
  var searchResults;
  var dataService = DataService;
  var family = [];

  //get active family data
  if (dataService.familyData() === undefined){
    dataService.retrieveFamilyData().then(function (response) {
      $scope.family = dataService.familyData().family;
      $scope.people = dataService.familyData().people;
    });
  } else{
    console.log('dataService.familyData', dataService.familyData());
      $scope.family = dataService.familyData().family;
      $scope.people = dataService.familyData().people;
      console.log('resulting people in family from db, ', $scope.people);
      console.log('what is in the family object? ', $scope.family);
   }

   $scope.updateFamily = function () {
     var updateObject = {people: $scope.people,
                          family: $scope.family
                        };
     $http.post('/data/family/update', updateObject).
       then(function (response) {
         console.log('response after making a family: ', response.data);
       });
   };

   //functions and options required for ui-grid/individual directory
   $scope.gridOptions = {
     columnDefs: [
            { field: 'first_name',
              sort: {
                direction: uiGridConstants.ASC,
                priority: 1
              }
            },
            { field: 'last_name',
               sort: {direction: uiGridConstants.ASC, priority: 2}},
            { field: 'email'},
            { field: 'phone'},
            {field: 'pin', visible: false}
          ],
     enableFullRowSelection: true
   };



   $scope.gridOptions.onRegisterApi = function(gridApi){
   //set gridApi on scope
   $scope.gridApi = gridApi;
   gridApi.selection.on.rowSelectionChanged($scope,function(row){
       var msg = 'row selected ' + row.isSelected;
       console.log('object to be inserted into the family: ',row.entity);
       if (row.isSelected && !(isInFamily($scope.people, row.entity.pin)) ){
         $scope.people.push(row.entity);
       }else{
         $scope.removeFromFamily(row.entity.pin);
       }
       //todo if person is no longer in family array, deselect on the grid
       console.log(msg);
     });
   };

   $scope.getQuery = function () {
         console.log('heading out from controller', $scope.searchObject);
       //  if (dataService.peopleData() === undefined){
           dataService.retrieveData($scope.searchObject)
           .then(function () {
             $scope.searchResults = dataService.peopleData();
             $scope.gridOptions.data = $scope.searchResults;
           });
       //  }
         // else{
         //   $scope.searchResults = dataService.peopleData();
         // }
     };

   //other helper functions
   $scope.removeFromFamily = function (pin) {
     for (var i = 0; i < $scope.people.length; i++) {
       if ($scope.people[i].pin === pin){
         $scope.people.splice(i,1);
       }
     }
   };

   $timeout(function () {
      angular.element(document).find('nav').triggerHandler('click');
   }, 0);

}]);

function SearchObject() {
  this.first_name='';
  this.last_name='';
  this.email='';
  this.phone='';
}

function isInFamily(array, dbId) {
  for (var i = 0; i < array.length; i++) {
    if (array[i].pin === dbId) return true;
  }
  return false;
}

app.controller('FamilyDatacardController', ['$scope', 'DataService',
function ($scope, DataService) {
  var searchResults;
  var dataService = DataService;

  $scope.updateActiveMemberId = function (id) {
    console.log('from familyDC, set active memberID to:', id);
   dataService.assignActiveMemberId(id);
  };

  dataService.retrieveFamilyData()
   .then(function () {
        $scope.family = dataService.familyData().family;
        $scope.people = dataService.familyData().people;
        console.log('resulting people in family from db, ', $scope.people);
   });




}]);

app.controller('HomeController',['$scope', function ($scope) {
  console.log('hi, for HomeController');

}]);

var x = 'gulp test';

app.controller('IndividualDatacardController', ['$scope', 'DataService',
function ($scope, DataService) {
  $scope.x = 'hi!';
  $scope.columnWidth = 20;
  $scope.columnSpacing = '3';
  var dataService = DataService;
  var data;
  dataService.retrieveActiveMember()
  .then(function () {
      data =  dataService.memberData();
      $scope.member = dataService.memberData().individual;
      $scope.addresses = dataService.memberData().addresses;
      $scope.families = dataService.memberData().families;
      console.log('from inside indvcontr',data);
    });

    $scope.updateActiveFamilyId = function (id) {
      dataService.assignActiveFamilyIdApi(id);
    };

}]);

app.controller('LoginController',['$scope', '$http', '$location',
  function ($scope, $http, $location) {
  console.log('hi, from Login Controller');

  $scope.user = {};
  $scope.submitCredentials = function () {
    console.log('data sent to server', $scope.user);
    $http.post('/login', $scope.user)
      .then(function (response) {
        //console.log('is this html?', response.data);
        console.log('response is', response);
        //console.log('response status', response.status);
        if (response.status===200){
          $location.path('/directory');
        }
        else{
          // $location.path('/failure');
          alert('sign in failed');
        }

      });
  };

}]);

app.controller('MakeFamiliesController',
  ['$scope', 'DataService', 'uiGridConstants','$timeout', '$http',
function ($scope, DataService, uiGridConstants, $timeout, $http) {

  $scope.searchObject = new SearchObject();
  $scope.searchResults = [];
  $scope.family = [];
  var dataService = DataService;

  $scope.sendSelectedMemberInfo = function(id) {
    console.log('this is the grid id', id);
    dataService.assignActiveMemberId(id);
  };

  $scope.gridOptions = {
    columnDefs: [
           { field: 'first_name',
             cellTemplate: '<a ng-click="grid.appScope.sendSelectedMemberInfo(row.entity.pin)" ' +
             'href="#/individualDatacard">{{COL_FIELD}}</a>',
             sort: {
               direction: uiGridConstants.ASC,
               priority: 1
             }
           },
           { field: 'last_name',
              sort: {direction: uiGridConstants.ASC, priority: 2}},
           { field: 'email'},
           { field: 'phone'},
           {field: 'pin', visible: false}
         ],
    enableFullRowSelection: true
  };

  $scope.gridOptions.onRegisterApi = function(gridApi){
  //set gridApi on scope
  $scope.gridApi = gridApi;
  gridApi.selection.on.rowSelectionChanged($scope,function(row){
      var msg = 'row selected ' + row.isSelected;
      console.log(row.entity);
      if (row.isSelected){
        $scope.family.push(row.entity);
      }else{
        $scope.removeFromFamily(row.entity.pin);
      }
      //todo if person is no longer in family array, deselect on the grid
      console.log(msg);
    });
  };

  $scope.removeFromFamily = function (pin) {
    for (var i = 0; i < $scope.family.length; i++) {
      if ($scope.family[i].pin === pin){
        $scope.family.splice(i,1);
      }
    }
  };

  $scope.getQuery = function () {
        console.log('heading out from controller', $scope.searchObject);
      //  if (dataService.peopleData() === undefined){
          dataService.retrieveData($scope.searchObject)
          .then(function () {
            $scope.searchResults = dataService.peopleData();
            $scope.gridOptions.data = $scope.searchResults;
          });
      //  }
        // else{
        //   $scope.searchResults = dataService.peopleData();
        // }
    };

    $scope.makeFamily = function () {
      $http.post('/data/family', $scope.family).
        then(function (response) {
          console.log('response after making a family: ', response.data);
        });
    };
    $timeout(function () {
       angular.element(document).find('nav').triggerHandler('click');
    }, 0);
}]);

function SearchObject() {
  this.first_name='';
  this.last_name='';
  this.email='';
  this.phone='';
}

app.controller('RegisterController',['$scope', '$http', '$location',
  function ($scope, $http, $location) {
  console.log('hi, from UserRegistrationController');
  $scope.user={};

  $scope.submitRegistration = function () {
    console.log('data sent to server', $scope.user);
    $http.post('/register', $scope.user)
      .then(function (response) {
        //console.log('is this html?', response.data);
        console.log('response is', response);
        if (response.status===200){
          $location.path('/login');
        }

      });
  };


}]);
